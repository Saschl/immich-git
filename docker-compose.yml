#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.123.0
    #image: saschl/immich:latest
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ${THUMB_LOCATION}:/usr/src/app/upload/thumbs
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - 2283:2283
    depends_on:
      - redis
      - database
    restart: always
    devices:
      - /dev/dri:/dev/dri
    deploy:
      resources:
        limits:
          cpus: '4'
    healthcheck:
      disable: true

  immich-machine-learning:
    container_name: immich_machine_learning
    image:  ghcr.io/immich-app/immich-machine-learning:v1.123.0-openvino

    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - model-cache1:/cache
      - /dev/bus/usb:/dev/bus/usb
    env_file:
      - .env
    #environment:
     # IMMICH_LOG_LEVEL: info
      
    restart: always
    device_cgroup_rules:
      - 'c 189:* rmw'
    devices:
      - /dev/dri:/dev/dri
    deploy:
      resources:
        limits:
          cpus: '3'
    healthcheck:
      disable: true


  redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  database:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    env_file:
      - .env
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    #ports:
    # - 5555:5432
    healthcheck:
      test: pg_isready --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' || exit 1; Chksum="$$(psql --dbname='${DB_DATABASE_NAME}' --username='${DB_USERNAME}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=2GB", "-c", "wal_compression=on", "-c","work_mem=1GB"]
    restart: always

 # power-tools:
 #   container_name: immich_power_tools
 #   image: ghcr.io/varun-raj/immich-power-tools:latest
 #   ports:
 #     - "8001:3000"
 #   env_file:
 #     - stack.env
  
 # backup:
 #   container_name: immich_db_dumper
 #   image: prodrigestivill/postgres-backup-local:14
 #   restart: always
 #   env_file:
 #     - stack.env
 #   environment:
 #     POSTGRES_HOST: database
 #     POSTGRES_CLUSTER: 'TRUE'
 #     BACKUP_ON_START: 'FALSE'
 #     POSTGRES_USER: ${DB_USERNAME}
 #     POSTGRES_PASSWORD: ${DB_PASSWORD}
 #     POSTGRES_DB: ${DB_DATABASE_NAME}
 #     SCHEDULE: "@daily"
 #     POSTGRES_EXTRA_OPTS: '--clean --if-exists'
 #     BACKUP_DIR: /db_dumps
 #     BACKUP_KEEP_DAYS: 1
 #     BACKUP_KEEP_WEEKS: 1
 #     BACKUP_KEEP_MONTHS: 2
 #   volumes:
 #     - /volume2/docker/immich/backup:/db_dumps
 #   depends_on:
 #     - database

#  immich-prometheus:
#    container_name: immich_prometheus
#    ports:
#      - 9090:9090
#    image: prom/prometheus@sha256:f20d3127bf2876f4a1df76246fca576b41ddf1125ed1c546fbd8b16ea55117e6
#    volumes:
#      - /volume2/docker/immich/prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus-data1:/prometheus

#  immich-grafana:
#    container_name: immich_grafana
#    command: ['./run.sh', '-disable-reporting']
#    ports:
#      - 3000:3000
#    image: grafana/grafana:11.1.0-ubuntu@sha256:c7fc29ec783d5e7fc1bdfaad6f92345a345cffbc5d21c388ca228175006fc107
#    volumes:
#      - grafana-data:/var/lib/grafana
    
networks:
  default:
    external: true
    name: eggs

volumes:
  model-cache1:
